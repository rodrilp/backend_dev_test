// Code generated by MockGen. DO NOT EDIT.
// Source: repository/chunk_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "main/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChunkRepositoryInterface is a mock of ChunkRepositoryInterface interface.
type MockChunkRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockChunkRepositoryInterfaceMockRecorder
}

// MockChunkRepositoryInterfaceMockRecorder is the mock recorder for MockChunkRepositoryInterface.
type MockChunkRepositoryInterfaceMockRecorder struct {
	mock *MockChunkRepositoryInterface
}

// NewMockChunkRepositoryInterface creates a new mock instance.
func NewMockChunkRepositoryInterface(ctrl *gomock.Controller) *MockChunkRepositoryInterface {
	mock := &MockChunkRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockChunkRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChunkRepositoryInterface) EXPECT() *MockChunkRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateChunk mocks base method.
func (m *MockChunkRepositoryInterface) CreateChunk(chunk *models.Chunk) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChunk", chunk)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateChunk indicates an expected call of CreateChunk.
func (mr *MockChunkRepositoryInterfaceMockRecorder) CreateChunk(chunk interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChunk", reflect.TypeOf((*MockChunkRepositoryInterface)(nil).CreateChunk), chunk)
}
